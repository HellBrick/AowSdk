<UserControl x:Class="ModEditor.Views.Abilities.AbilityListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:ctrl="clr-namespace:ModEditor.Views.Controls"
			 xmlns:utils="clr-namespace:Utils.WPF;assembly=Utils.WPF"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	
	<UserControl.Resources>
		<Style x:Key="AbilityListBoxItem" TargetType="{x:Type ListBoxItem}">
			<Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
			<Setter Property="Focusable" Value="False"></Setter>
			<Setter Property="Padding" Value="0"></Setter>
			<Setter Property="Margin" Value="2"></Setter>
			
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<!--<Setter Property="Background" Value="{x:Null}"></Setter>
					<Setter Property="BorderBrush" Value="{x:Null}"></Setter>-->
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="AbilityListBox" TargetType="{x:Type ListBox}">
			<Setter Property="BorderThickness" Value="0"></Setter>
			<Setter Property="ItemContainerStyle" Value="{StaticResource AbilityListBoxItem}"></Setter>
		</Style>

		<SolidColorBrush x:Key="LinkBrush" Color="{utils:HSV Hue=200, Saturation=70, Value=85}"></SolidColorBrush>
		<SolidColorBrush x:Key="LinkHoverBrush" Color="{utils:HSV Hue=0, Saturation=70, Value=85}"></SolidColorBrush>

		<Style x:Key="AddAbilityButton" TargetType="{x:Type ToggleButton}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="Padding" Value="12,5,2,2"></Setter>
			<Setter Property="Foreground" Value="{StaticResource LinkBrush}"></Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Foreground" Value="{StaticResource LinkHoverBrush}"></Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style x:Key="PseudoLink" TargetType="{x:Type TextBlock}">
			<Setter Property="TextDecorations" Value="Underline"></Setter>
		</Style>
	</UserControl.Resources>
	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
		</Grid.RowDefinitions>

		<ToggleButton Name="_addToggle" Style="{DynamicResource AddAbilityButton}">
			<TextBlock Text="Add" Style="{StaticResource PseudoLink}"></TextBlock>
		</ToggleButton>
		
		<ListBox Grid.Row="1" ItemsSource="{Binding Abilities}" Style="{StaticResource AbilityListBox}"></ListBox>
		
		<Popup IsOpen="{Binding ElementName=_addToggle, Path=IsChecked, Mode=TwoWay}"
			   StaysOpen="False"
			   Placement="Mouse" Opened="OnPopupOpened"
			   Name="_popup">
			
			<ctrl:AbilityPicker x:Name="_picker" AbilityList="{Binding .}"></ctrl:AbilityPicker>
			
		</Popup>
	</Grid>
	
</UserControl>
